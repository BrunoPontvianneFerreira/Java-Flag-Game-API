/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package projeto_ed;

import projeto_ed.Game.*;
import projeto_ed.Graphs.*;
import projeto_ed.MapsManagement.*;

import java.util.InputMismatchException;
import java.util.Iterator;
import java.util.Scanner;

public class App {


    public static int readIntWithLimit(Scanner read, int min, int max) {
        boolean valid = false;
        int option = 0;
        while (!valid) {
            try {
                option = read.nextInt();
            } catch (InputMismatchException e) {
                read.nextLine();
                continue;
            }
            if (option >= min && option <= max) {
                valid = true;
            }
            read.nextLine();
        }
        return option;
    }

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        MapExporter exporter = new MapExporter();
        MapImporter importer = new MapImporter();
        Mapa mapa = new Mapa(15);
        for (int i = 1; i <= 15; i++) {
            Vertice vertice = new Vertice();
            mapa.addVertex(vertice);
        }
        int escolha;

        do {
            System.out.println("====Menu====");
            System.out.println("1 - Play a match");
            System.out.println("2 - Map Creator menu");
            System.out.println("3 - Exit");
            escolha = readIntWithLimit(scanner, 1, 3);
            Mapa mapToUse;
            Mapa mapToCreate;
            switch (escolha) {
                case 1:
                    System.out.println("====Let´s begin====");
                    System.out.println("Do you wish to:");
                       System.out.println("1 - Import a map");
                       System.out.println("2 - Create one");
                       int mapAnswer = readIntWithLimit(scanner,1,2);
                       switch (mapAnswer){
                           case 1:
                               System.out.println("Introduce the path for the map you want to import:");
                               String pathMap = scanner.nextLine();
                               mapToUse = importer.loadMapFromFile(pathMap);
                               break;
                           case 2:
                               System.out.println("How many positions do you want your map to have, minimum 10 and maximum 100:");
                               int mapSizeToUse = readIntWithLimit(scanner,10,100);
                               mapToUse = new Mapa(mapSizeToUse);
                               mapToUse.generateVertexs(mapSizeToUse);
                               System.out.println("Do you want your map to be:");
                               System.out.println("1 - Directional");
                               System.out.println("2 - Non directional");
                               int mapTypeToUse = readIntWithLimit(scanner,1,2);
                               int coverageToUse;
                               switch (mapTypeToUse){
                                   case 1:
                                       System.out.println("Introduce the coverage you want to have on this map, you need a minimum of 30% coverage in this case:");
                                       coverageToUse = readIntWithLimit(scanner,30,100);
                                       mapToUse.gerarGrafoCompletoAleatorioDirecionado(coverageToUse);
                                       break;
                                   case 2:
                                       System.out.println("Introduce the coverage you want to have on this map, you need a minimum of 20% coverage in this case:");
                                       coverageToUse = readIntWithLimit(scanner,20,100);
                                       mapToUse.gerarGrafoCompletoAleatorioNaoDirecionado(coverageToUse);
                                       break;
                               }
                               System.out.println("This is the map you generated:");
                               mapToUse.printMapa();
                               System.out.println();
                               System.out.println("This are the map edges:");
                               mapToUse.printArestas();
                               System.out.println();
                               break;
                       }


                    break;
                case 2:
                    System.out.println("====Map Creation Menu====");
                    System.out.println("Welcome to the map creation menu." +
                            "\nAfter you have created your map we will ask you the path where you want to store the created map." +
                            "\nKeep in mind that if you choose to not save the map you will lose it.");
                    System.out.println("Let´s create the perfect map");
                    System.out.println("How many positions do you want your map to have, minimum 10 and maximum 100:");
                    int mapSize = readIntWithLimit(scanner,10,100);
                    mapToCreate = new Mapa(mapSize);
                    mapToCreate.generateVertexs(mapSize);
                    System.out.println("Do you want your map to be:");
                    System.out.println("1 - Directional");
                    System.out.println("2 - Non directional");
                    int mapType = readIntWithLimit(scanner,1,2);
                    int coverage;
                    switch (mapType){
                        case 1:
                            System.out.println("Introduce the coverage you want to have on this map, you need a minimum of 30% coverage in this case:");
                            coverage = readIntWithLimit(scanner,30,100);
                            mapToCreate.gerarGrafoCompletoAleatorioDirecionado(coverage);
                            break;
                        case 2:
                            System.out.println("Introduce the coverage you want to have on this map, you need a minimum of 20% coverage in this case:");
                            coverage = readIntWithLimit(scanner,20,100);
                            mapToCreate.gerarGrafoCompletoAleatorioNaoDirecionado(coverage);
                            break;
                    }
                    System.out.println("This is the map you generated:");
                    mapToCreate.printMapa();
                    System.out.println();
                    System.out.println("These are the map edges:");
                    mapToCreate.printArestas();
                    System.out.println();
                    System.out.println("Do you wish to store this map?");
                    System.out.println("1 - Yes");
                    System.out.println("2 - No");
                    int saveOption = readIntWithLimit(scanner,1,2);
                    switch (saveOption){
                        case 1:
                            System.out.println("What do you want to call your map?");
                            String name = scanner.nextLine();
                            System.out.println("Introduce the path where you wish to store the map, introduce just the folder with no \\ in front of it:");
                            String pathToSave = scanner.nextLine();
                            String fullPathToSave = pathToSave + "\\" + name + ".txt";
                            exporter.saveMapToFile(mapToCreate, fullPathToSave);
                            break;
                        case 2:
                            System.out.println("Are you sure you dont want to store it? This map will be lost");
                            System.out.println("1 - Save");
                            System.out.println("2 - Dont save");
                            int exitWithoutSavingOption = readIntWithLimit(scanner,1,2);
                            switch (exitWithoutSavingOption){
                                case 1:
                                    System.out.println("What do you want to call your map?");
                                    String nameWithoutSaving = scanner.nextLine();
                                    System.out.println("Introduce the path where you wish to store the map, introduce just the folder with no \\ in front of it:");
                                    String pathToSaveWithoutSaving = scanner.nextLine();
                                    String fullPathToSaveWithoutSaving = pathToSaveWithoutSaving + "\\" + nameWithoutSaving + ".txt";
                                    exporter.saveMapToFile(mapToCreate, fullPathToSaveWithoutSaving);
                                    break;
                                case 2:
                                    System.out.println("Your map was not stored");
                                    break;
                            }
                            break;
                    }
                    break;
                case 3:
                    System.out.println("Thank you for playing!");
                    break;
            }
        }while(escolha != 3);
    }
}
